// Generated by CoffeeScript 1.9.0
(function() {
  window.Tutorial = (function() {
    Tutorial.steps = null;

    Tutorial.step = null;

    Tutorial.message = null;

    Tutorial.section = null;

    Tutorial.modal = null;

    function Tutorial(_at_step, _at_message) {
      this.step = _at_step;
      this.message = _at_message;
      this.steps = [];
      this.messages = [];
      $('#modal_init').modal({
        backdrop: 'static',
        keyboard: false,
        show: true
      });
      this.load();
    }

    Tutorial.prototype.load = function() {
      console.log("trying to load");
      return $.getJSON('/json/messages.json', function() {
        return console.log("Success");
      }).done(function(data) {
        var step, this_tutorial, _i, _len, _ref;
        this_tutorial = window.tutorial;
        _ref = data.tutorial.steps;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          step = _ref[_i];
          this_tutorial.add(step);
        }
        return this_tutorial.display_message();
      }).fail(function(error) {
        console.log("Error");
        return console.log($.parseJSON(error.responseText));
      });
    };

    Tutorial.prototype.add = function(step) {
      console.log(step);
      return this.steps.push(step);
    };

    Tutorial.prototype.display_message = function() {
      console.log("message: " + this.message);
      console.log("steps[" + this.step + "].messages[" + this.message + "]");
      console.log(this.steps[this.step].messages[this.message].message);
      $('#rxe_message')[0].innerHTML = this.steps[this.step].messages[this.message].message;
      console.log("Update");
      return this.update_navbuttons();
    };

    Tutorial.prototype.update_navbuttons = function() {
      console.log("Update nav buttons");
      this.update_next();
      this.update_previous();
      return this.show_tryit();
    };

    Tutorial.prototype.update_next = function() {
      console.log("update next");
      if (typeof this.steps[this.step].messages[this.message + 1] !== "undefined") {
        return $("#modal-next")[0].style.display = "inline";
      } else {
        console.log("hide button");
        return $("#modal-next")[0].style.display = "none";
      }
    };

    Tutorial.prototype.update_previous = function() {
      console.log("message: " + this.message);
      if (typeof this.steps[this.step].messages[this.message - 1] !== "undefined") {
        return $("#modal-previous")[0].style.display = "inline";
      } else {
        console.log("hide button");
        return $("#modal-previous")[0].style.display = "none";
      }
    };

    Tutorial.prototype.show_tryit = function() {
      console.log("Try it: " + this.steps[this.step].messages[this.message].tryit);
      if (this.steps[this.step].messages[this.message].tryit === true) {
        return $("#modal-tryit")[0].style.display = "inline";
      } else {
        return $("#modal-tryit")[0].style.display = "none";
      }
    };

    Tutorial.prototype.next = function() {
      this.message++;
      return this.display_message();
    };

    Tutorial.prototype.previous = function() {
      this.message--;
      return this.display_message();
    };

    Tutorial.prototype.get_step = function() {
      return this.step;
    };

    return Tutorial;

  })();

}).call(this);
