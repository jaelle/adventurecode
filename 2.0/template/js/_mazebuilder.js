// Generated by CoffeeScript 1.8.0
(function() {
  var Maze, mazebuilder_canvas;

  Maze = (function() {
    function Maze(container_id, cell_size, num_cols, num_rows) {
      this.container_id = container_id;
      this.cell_size = cell_size;
      this.num_cols = num_cols;
      this.num_rows = num_rows;
    }

    Maze.prototype.create = function() {
      var col, currentCell, row, _i, _ref, _results;
      this.canvas = $("<canvas>");
      this.canvas[0].className = "maze";
      this.canvas[0].width = this.cell_size * this.num_cols;
      this.canvas[0].height = this.cell_size * this.num_rows;
      $(this.container_id).append(this.canvas[0]);
      console.log(this.canvas[0].width);
      this.drawing_context = this.canvas[0].getContext('2d');
      currentCell = [];
      _results = [];
      for (row = _i = 0, _ref = this.num_rows; _i <= _ref; row = _i += 1) {
        currentCell[row] = [];
        _results.push((function() {
          var _j, _ref1, _results1;
          _results1 = [];
          for (col = _j = 0, _ref1 = this.num_cols; _j <= _ref1; col = _j += 1) {
            currentCell[row][col] = this.createCell(col, row);
            _results1.push(this.drawCell(currentCell[row][col]));
          }
          return _results1;
        }).call(this));
      }
      return _results;
    };

    Maze.prototype.createCell = function(col, row) {
      return {
        col: col,
        row: row
      };
    };

    Maze.prototype.drawCell = function(cell) {
      var x, y;
      console.log(cell);
      x = cell.col * this.cell_size;
      y = cell.row * this.cell_size;
      this.drawing_context.strokeStyle = "rgba(0,0,0,1)";
      this.drawing_context.strokeRect(x, y, this.cell_size, this.cell_size);
      this.drawing_context.fillStyle = "rgb(255,255,255)";
      return this.drawing_context.fillRect(x, y, this.cell_size, this.cell_size);
    };

    return Maze;

  })();

  mazebuilder_canvas = new Maze("#mazebuilder", 65, 5, 5);

  mazebuilder_canvas.create();

}).call(this);
